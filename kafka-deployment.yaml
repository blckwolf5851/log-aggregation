apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Program Files\kompose\kompose.exe convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Program Files\kompose\kompose.exe convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/logaggregation_kafka: "true"
        io.kompose.service: kafka
    spec:
      securityContext:
        fsGroup: 2000 
      containers:
      - env:
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: CLIENT://kafka:9092,EXTERNAL://localhost:9093
        - name: KAFKA_CFG_LISTENERS
          value: CLIENT://:9092,EXTERNAL://:9093
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: CLIENT
        image: docker.io/bitnami/kafka:2
        imagePullPolicy: ""
        name: kafka
        ports:
        - containerPort: 9092
        resources: {}
        volumeMounts:
        - mountPath: /bitnami
          name: logaggregation-kafka-data
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: logaggregation-kafka-data
        persistentVolumeClaim:
          claimName: logaggregation-kafka-data
status: {}
